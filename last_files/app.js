"use strict";!function(){riot.settings.brackets="${ }",window.App={ready:function(t){App._ready?t():App.one("ready",t)}},riot.observable(window.App),$(function(t){App._ready=!0,setTimeout(function(){App.trigger("ready"),riot.mount("app")},500)})}(),function(){App.params={},$.each(window.location.hash.split(/[#&]/),function(t,e){if(e&&(e=e.split("="),2==e.length)){var s=e[1];"true"==s&&(s=!0),"false"==s&&(s=!1),App.params[e[0]]=s}});var t=App.params.theme||"default";t&&$("<link/>",{rel:"stylesheet",type:"text/css",href:"styles/themes/"+t+"/"+t+"-theme.css"}).appendTo("head"),App.params.pro=App.params.pro||"light"===t,App.params.hostname||(App.params.hostname="localhost"==window.location.hostname?"localhost:8082":window.location.hostname)}(),function(){App.scripts={loaded:{},waiting:[],loading:0,ready:function(t){this.loading?this.waiting.push(t):t()},load:function(t,e,s){var i=this;this.loaded[t]===!0?e&&e(!1):"error"===this.loaded[t]?s&&s():this.loaded[t]===!1?this.ready(e):(this.loading++,this.loaded[t]=!1,$.ajax({url:t,dataType:"script",cache:!0,success:function(){e&&e(!0),i.loaded[t]=!0},error:function(){s&&s(),i.loaded[t]="error"},complete:function(){i.loading--,0==i.loading&&(i.waiting.forEach(function(t){return t()}),i.waiting=[])}}))}}}(),function(){function t(t,e){t.setStatus("H:Establishing a socket connection..."),t.client=new Ably.Realtime(e),t.client.connection.on("disconnected",function(e){t.client.connect()}),t.client.connection.on("connected",function(e){t.setStatus("H:Establishing channel connection...",!0),t.channel=t.client.channels.get("runner:"+t.guid),t.setStatus("H:Attaching to channel...",!0),t.channel.on(function(){t.setStatus("H:Channel "+this.event,!0)}),t.channel.on("attached",function(){t.persistent?t.persisted||t.setStatus("Creating a persistent environment...",!0):t.setStatus("H:Ready",!0)}),t.channel.subscribe("stdout",function(e){t.trigger("stdout",e)}),t.channel.subscribe("status",function(e){t.current&&!t.current.completed&&t.setStatus(e.data)}),t.channel.subscribe("output",function(e){t.current&&!t.current.completed&&n(t,e)})})}function e(t,e,s){t.current.completed=!0,t.current.response=e,t.current.error=s,console.log(e),t.trigger("result.completed"),t.setStatus("H:Ready")}function s(t,s){t.trigger("result.success"),e(t,s,null)}function i(t,s){console.log(s),t.trigger("result.failed"),e(t,{},s)}function n(t,e){}App.ready(function(){App.runner=new App.Runner,App.params.displayOnly||App.runner.load()}),App.Runner=function(){riot.observable(this),this.guid=App.Runner.guid(),this.runs=0,this.persistent=App.params&&App.params.persistent},App.Runner.guid=function(){var t=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)};return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()},App.Runner.prototype.ready=function(t){this._ready?t():this._readyCallback=t},App.Runner.prototype.setStatus=function(t,e){e&&this.current&&!this.current.completed||(this.status=t,this.trigger("status-change"),"Ready"!=this.status||this._ready||(this._ready=!0,this._readyCallback&&(this._readyCallback(),delete this._readyCallback)))},App.Runner.prototype.load=function(){var e=this;this.setStatus("H:Initializing..."),$.post("//"+App.params.hostname+"/token").done(function(s){s.token?t(e,s.token):e.setStatus("Unable to authenticate!")}).fail(function(t){e.setStatus("Failed to initialize. You may need to reload the page")})},App.Runner.prototype.run=function(t){var e=this;return this.current&&!this.current.completed?void console.log("Already running"):(this.runs++,this._ready&&this.channel&&"detached"==this.channel.state&&this.channel.attach(),this.trigger("result.started"),this.setStatus("Sending request..."),this.current={request:t,completed:!1},void(this.persistent||(App.params.pro&&(t.ably=!0,t.batch=!0),this.channel&&(t.channel=this.channel.name),$.ajax({url:"//"+App.params.hostname+"/run",data:t,type:"POST",dataType:"json",traditional:!0,success:function(t){return s(e,t)},error:function(t){return i(e,t)}}))))}}(),App.bridge={run:function(t){App.runner.run(t)},display:function(t){t.summary&&t.output?$("body").addClass("legacy").html(t.output.join?t.output.join(""):t.output):App.runOutput.display(t)},notifyHeight:function(){App.bridge.send("notifyHeight",$(window).height())},send:function(t,e){window.parent.postMessage({method:t,data:e,widget:"runner"},"*")}},App.ready(function(){App.bridge.send("ready"),window.self!==window.top&&window.addEventListener("message",function(t){if(t.origin.indexOf("codewars.com")>0||t.origin.indexOf("qualified.io")>0||t.origin.indexOf("localhost")>0)if(t.data.method){App.bridge.send("notifyReceipt",t.data.method);var e=App.bridge[t.data.method];e?e(t.data.data):App.bridge.send(t.data.method,t.data.data)}else console.log("Message received with data "+t.data)}),App.runner.on("result.completed",function(){App.bridge.send("notifyResponse",App.runner.current.response)})}),riot.tag2("app","<editor></editor> <run-status></run-status> <run-output></run-output> <realtime-output></realtime-output> <system-status></system-status>","","",function(t){window.App.tag=this,$("<link href='//fonts.googleapis.com/css?family=Source+Code+Pro' rel='stylesheet' type='text/css'>").appendTo($("head"))}),riot.tag2("raw","<span></span>","","",function(opts){var CONFIRM="Do you want to allow the scripts generated by the code execution output to run on this page? You are not running within a protected sandbox so this operation may not be safe if you do not trust the source";this.on("mount update",function(){this.current!=opts.content&&(this.current=opts.content,this.root.innerHTML=opts.content||"",opts.scripts&&this.scripts().length&&(window.self===window.top&&(App.scriptsConfirmed||window.confirm(CONFIRM))?(App.scriptsConfirmed=!0,this.runScripts()):this.runScripts()))}),this.scripts=function(){return $(this.root).find("script")}.bind(this),this.runScripts=function(){window.confirm=$.noop,window.alert=$.noop,window.prompt=$.noop,window.print=$.noop,window.open=$.noop,this.scripts().each(function(i,el){var script=el.innerHTML;script&&""!=script&&setTimeout(function(_){try{eval(script)}catch(e){console.error(e)}})})}.bind(this)}),riot.tag2("run-output",'<h1 class="run-status" if="${shouldShowStatus()}"> <span class="status-label">Status: </span> ${App.runner.status} </h1> <h1 class="start-msg" if="${shouldShowStartMsg()}"> Your results will be shown here. </h1> <div class="run-summary" if="${shouldShow() && !executionFailure()}"> <span class="time"> <span>Time:</span> ${response.result.wallTime || 0}ms</span> <span class="${passed: response.result.passed}" if="${!!hasTests()}"> <a onclick="${toggleAll(true)}">Passed:</a> ${response.result.passed}</span> <span class="${failed: !response.result.completed}" if="${!!hasTests()}"> <a onclick="${toggleAll(false)}">Failed:</a> ${response.result.failed}</span> <span class="errors" if="${response.result.errors}"> <a onclick="${toggleAll(false)}">Errors:</a> ${response.result.errors}</span> </div> <div class="run-output" if="${shouldShow()}"> <div if="${response.result.output.length}"> <h2 class="${passed: response.result.completed && !hasStdErr(),                    failed: response.result.failed > 0}">${!!hasTests() ? \'Test Results\' : \'STDOUT\'}:</h2> <div class="test-results"> <run-output-item no-reorder each="${item, i in response.result.output}" item="${item}" if="${item.v}"></run-output-item> </div> <div class="test-tip test-tip--completed" if="${App.params.congrats && response.result.completed && !hasStdErr()}"> <strong>You have passed all tests! :)</strong> </div> </div> <div class="test-error" if="${hasStdErr()}"> <h2>STDERR:</h2> <div class="run-output-error" if="${!stdoutCollapsed}"> <span class="value"><raw content="${stdError()}"></raw></span> </div> </div> <div class="test-tip" if="${response.result.timedOut}"> <strong>Why did my code time out?</strong> <p> Our servers are configured to only allow a certain amount of time for your code to execute. In rare cases the server may be taking on too much work and simply wasn\'t able to run your code effectiently enough. Most of the time though this issue is caused by inefficient algorithms. If you see this error multiple times you should try to optimize your code further. </p> </div> </div> <div class="execution-error" if="${!hasStdErr() && executionFailure()}"> <h2>Server Execution Error:</h2> <div class="run-output-error"> <div if="${!response.message}"> The server attempted to execute your code but there was an issue with the request. This should be a rare issue. Please try running your code again. If the issue persists, please contact us. </div> <div if="${response.message}"> ${response.message} </div> </div> </div> <div class="test-error" if="${error && !hasStdErr() && !executionFailure()}"> <h2>Request Error:</h2> <div class="run-output-error"> <h4><b>${error.status}: </b>${error.statusText || \'Unknown Server Error!\'}</h4> <p if="${error.responseText}"><b>Description: </b><raw content="${error.responseText}" if="${error.statusCode != 504}"></raw></p> <p>This error was caused due to an issue processing the web request, not because of an issue executing your code. Please try again.</p> </div> </div>',"",'class="output"',function(t){function e(t){return t?s([s(t),s(t.map(function(t){return e(t.items)}))]):[]}function s(t){return[].concat.apply([],t)}this.on("mount",function(){var t=this;App.runOutput=this,App.runner.on("result.completed",function(){t.response=App.runner.current.response,t.request=App.runner.current.request,t.error=App.runner.current.error}),App.runner.on("status-change",function(){"Sending request..."==App.runner.status&&(t.response=null),t.update()}),this.update(),App.params.display&&this.display(decodeURIComponent(App.params.display))}),this.toggleAll=function(t){return function(){App.trigger("toggle-all",t)}}.bind(this),this.display=function(t){"string"==typeof t&&(t=JSON.parse(t)),console.log(t),t.response||t.request?(this.response=t.response,this.request=t.request):(this.response=t,this.request=null),this.update()}.bind(this),this.executionFailure=function(){if(this.response&&this.response.type&&"execution success"!=this.response.type&&"code_timeout"!=this.response.type){var t=this.stdError();if(!this.response.message||!t||this.response.message.indexOf(t)===-1)return!0}return!1}.bind(this),this.shouldShowStartMsg=function(){return!(App.params.displayOnly||this.shouldShowStatus()||this.executionFailure()||this.shouldShow())}.bind(this),this.shouldShowStatus=function(){return(!App.systemStatus||!App.systemStatus.isMajor())&&(App.params.debug||App.runner.status&&0!=App.runner.status.indexOf("H:"))}.bind(this),this.shouldShow=function(){return!!this.response}.bind(this),this.hasTests=function(){return this.request?!!this.request.fixture:this.response?this.response.result.failed||this.response.result.passed:void 0}.bind(this),this.stdError=function(){var t=this.response.stderr||this.response.result.error;return t?t.trim():t}.bind(this),this.hasStdErr=function(){var t=this.stdError();if(t)return!this.response.stdout||!this.response.result.failed&&!this.response.result.errors||(this.flattened=e(this.response.result.output),!this.flattened.find(function(e){if(e.v&&"error"===e.t||"failed"===e.t){e.v.trim();return e.v.length>15&&(e.v==t||e.v.indexOf(t)>=0||t.indexOf(e.v)>=0)}}))}.bind(this)}),riot.tag2("run-output-item",'<div class="run-output-${item.t} ${block: item.items} ${collapsed: childrenCollapsed || collapsed} ${item.className}" if="${shouldShow()}"> <div class="run-output-label ${tabbed: item.tabs}" if="${item.l}"> <label class="${active: !item.tabs.active}"> <span class="${toggleClass()}" onclick="${toggle}"></span> <span onclick="${setTab}">${item.l}</span> </label> <label class="tab ${active: item.tabs.active == tab}" each="${tab in item.tabs}" onclick="${setTab}" tab="${tab}"> <span>${tab.l}</span> </label> </div> <span class="glyph passed" if="${item.t == \'passed\'}">&#10004;</span> <span class="glyph failed" if="${item.t == \'failed\'}">&#10008;</span> <span class="${toggleClass()}" if="${item.p != undefined}" onclick="${toggleChildren}"></span> <h4 class="error" if="${error}">${error}</h4> <span if="${!collapsed}" onclick="${toggleChildrenIfCollapsed}"> <run-output-value show="${isActive(this.item)}"></run-output-value> <run-output-value show="${isActive(config)}" each="${config in item.tabs}"></run-output-value> </span> <div class="items" if="${!childrenCollapsed}"> <run-output-item no-reorder each="${item in item.items}"></run-output-item> </div> <span class="tests-indicator" if="${childrenCollapsed && (childrenPassed + childrenFailed > 0)}"> (<span class="${passed: childrenPassed}">${childrenPassed} Passed</span>, <span class="${failed: childrenFailed}">${childrenFailed} Failed</span>) </span> </div>',"",'class="output-item"',function(t){var e=this;"log"!=this.item.t||this.item.l||(this.item.l="Log"),this.item.items&&(this.childrenPassed=this.item.items.filter(function(t){return"passed"===t.t}).length,this.childrenFailed=this.item.items.filter(function(t){return"failed"===t.t}).length),this.isActive=function(t){return t==this.item?!this.item.tabs||!this.item.tabs.active:this.item.tabs.active==t}.bind(this),this.on("mount",function(t){"SCRIPT"==e.item.m&&App.scripts.load(e.item.v),e.childrenCollapsed=!1,e.item.l&&0==e.item.l.indexOf("-")?(e.collapsed=!0,e.item.l=e.item.l.substr(1),e.update()):e.item.p===!0&&"it"===e.item.t&&(e.childrenCollapsed=!0,e.update()),App.on("toggle-all",function(t){"it"===e.item.t&&e.item.p==t&&e.toggleChildren()})}),this.setTab=function(t){var e=t.item?t.item.tab:null;this.item.tabs?((this.collapsed||this.item.tabs.active==e)&&this.toggle(),this.item.tabs.active=e):this.toggle(),this.update()}.bind(this),this.shouldShow=function(){return""!=this.item.v&&"SCRIPT"!=this.item.m&&(!this.item.hidden||App.params.showHidden)}.bind(this),this.toggle=function(){return this.collapsed=!this.collapsed,!0}.bind(this),this.toggleChildrenIfCollapsed=function(){if(this.childrenCollapsed)return this.childrenCollapsed=!1,!0}.bind(this),this.toggleChildren=function(){return this.childrenCollapsed=!this.childrenCollapsed,!0}.bind(this),this.toggleClass=function(){return"glyph "+(this.item.p?"passed":"failed")+" "+(this.collapsed||this.childrenCollapsed?"collapsed":"expanded")}.bind(this)}),riot.tag2("run-output-value",'<span if="${!localConfig.m}"> <raw class="value" content="${value()}" scripts="true" if="${isRaw()}"></raw> <span class="value" if="${!isRaw()}">${value()}</span> </span> <div if="${localConfig.m}"> <span class="value" if="${checkMode(\'ESC\')}">${value()}</span> <chart if="${checkMode(\'CHART\')}" chart="${value()}"></chart> <img class="value" if="${checkMode(\'IMAGE\')}" riot-src="${checkMode(\'IMAGE\') ? value() : \'\'}"></img> <highlight class="value" if="${checkMode(\'HIGHLIGHT\')}"></highlight> <diff class="value" if="${checkMode(\'DIFF\')}"></diff> <markdown class="value" if="${checkMode(\'MARKDOWN\')}" value="${value()}"></markdown> <mtable class="value" if="${checkMode(\'TABLE\')}" data="${value()}" preview="${localConfig.preview}"></mtable> <shell class="value" if="${checkMode(\'SHELL\')}" v="${value()}" preview="${localConfig.preview}"></shell> </div>',"",'class="${localConfig.className}"',function(t){var e=this;this.on("update",function(t){e.localConfig=e.config||e.item}),this.checkMode=function(t){return this.localConfig.m===t}.bind(this),this.isRaw=function(){switch(this.localConfig.t){case"log":case"example":case"tab":case"out":return!0;case"error":return"raw"===App.runOutput.response.outputType}return!1}.bind(this),this.value=function(){if(this.localConfig.v)switch(this.localConfig.t){case"completedin":if(this.localConfig.v&&"0"!=this.localConfig.v&&"0ms"!=this.localConfig.v){var t=this.localConfig.v.toLowerCase().indexOf("ms")>0||this.localConfig.v.indexOf("seconds")>0,e=t?this.localConfig.v:this.localConfig.v+"ms";return"Completed in "+e}break;case"error":case"failed":case"passed":return this.localConfig.v.replace(/^[\n ]*/,"").trim();case"script":return null;default:return this.localConfig.v}}.bind(this)}),riot.tag2("realtime-output",'<div if="${(running || App.runOutput.executionFailure()) && output}"> <div class="output"> <h2>STDOUT BUFFER:</h2> <div class="realtime-output"> <div class="run-output-log"> <label>Output is displayed in realtime as your code runs. It will be formatted after the code has finished executing.</label> <pre>${output}</pre> </div> </div> </div> </div> </div>',"",'class="output"',function(t){function e(t){return t.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"")}function s(t){return t=t.replace(/<PROP::.*>.*\\n/g,""),t.replace(/<[A-Z]*:[A-Z]*:.*>/g,"")}var i=this;this.on("mount",function(t){App.runner.on("result.started",function(t){i.running=!0,i.output="",i.update()}),App.runner.on("stdout",function(t){i.running&&t.data&&(i.output+=s(t.data),i.output=e(i.output),i.update())}),App.runner.on("result.success",function(t){i.running=!1,i.update()})})}),riot.tag2("editor",'<div if="${_show}"> <input id="language" type="text" if="${!App.params.language && !App.params.displayOnly}"> <textarea id="code" if="${!App.params.displayOnly}"></textarea> <textarea id="fixture" if="${App.params.framework}"></textarea> <textarea id="display" if="${App.params.displayOnly}"></textarea> <button onclick="${run}" if="${!App.params.displayOnly}">Run</button> <button onclick="${updateDisplay}" if="${App.params.displayOnly}">Display</button> <hr> </div>',"","",function(t){this.on("mount",function(){var t=this;App.editor=this,App.runner.on("status-change",function(){App.params.autorun&&0==App.runner.runs&&"Ready"==App.runner.status&&t.run()})}),this._show=App.params.editor,this.language.value=App.params.language,this.code.value=decodeURIComponent(App.params.code||""),this.fixture.value=decodeURIComponent(App.params.fixture||""),this.display.value=decodeURIComponent(App.params.display||""),this.show=function(){this._show=!0,this.update()}.bind(this),this.hide=function(){this._show=!1,this.update()}.bind(this),this.run=function(){var t={language:this.language.value,code:this.code.value};App.params.framework&&(t.fixture=this.fixture.value,t.testFramework=App.params.framework),t.languageVersion=App.params.languageVersion,this.embed(),App.runner.run(t)}.bind(this),this.updateDisplay=function(){this.embed(),App.runOutput.display(this.display.value)}.bind(this),this.embed=function(){var t="#";$.each(Object.keys(App.params),function(e,s){switch(s){case"fixture":case"code":case"display":case"hostname":break;default:t+="&"+s+"="+App.params[s]}}),App.params.displayOnly?this.display&&(t+="&display="+encodeURIComponent(this.display.value)):(t+="&code="+encodeURIComponent(this.code.value),this.fixture&&(t+="&fixture="+encodeURIComponent(this.fixture.value))),window.location.hash=t}.bind(this)}),riot.tag2("system-status",'<div class="${component.status}" if="${!isOperational()}"> <h3>The execution engine is currently ${statusName()}.</h3> <p if="${isMajor()}"> During a major outage you should <b>not expect</b> any code runs to succeed. We are working on the issue and will have it resolved ASAP. </p> <p if="${component.status == \'partial_outage\'}"> During a partial outage code runs may be inconsistent. Expect some, but not all, of your code runs to timeout. We are working on a fix. </p> <p if="${component.status == \'degraded_performance\'}"> The servers may not perform well at the moment. You should expect to wait longer than you normally would. An occasional timeout may happen due to server performance. </p> <p if="${component.status == \'under_maintenance\'}"> The system should remain stable while we upgrade but may have an occasional timeout. </p> </div>',"","",function(t){var e=this;window.App.systemStatus=this,this.on("mount",function(t){window.location.host.indexOf("codewars")>=0?$.getJSON("https://6bz4qrcfh4zj.statuspage.io/api/v2/components.json",function(t){t.components&&(e.component=t.components.find(function(t){return"Code Runner"===t.name}),e.component&&"operational"!==e.component.status&&e.update())}):e.component={status:"operational"}}),this.isOperational=function(){return"operational"===this.component.status}.bind(this),this.isMajor=function(){return"major_outage"===this.component.status}.bind(this),this.statusName=function(){switch(this.component.status){case"operational":return"operational";case"under_maintenance":return"under maintenance";case"major_outage":return"having a major outage";case"partial_outage":return"having a partial outage";case"degraded_performance":return"experience degraded performance"}}.bind(this)}),riot.tag2("chart",'<canvas height="${opts.height || 250}" width="${$(window).width() - 100}" if="${!error}"></canvas> <div if="${error}"> <h4>${error}</h4> ${opts.chart} </div>','chart,[riot-tag="chart"],[data-is="chart"]{ display: inline-block; width: 100%; }',"",function(t){var e=this;this.on("mount",function(t){App.scripts.load("//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.1/Chart.bundle.js",function(t){t&&(Chart.defaults.global.responsive=!1),s()})}),this.on("loaded",function(t){e.on("unmount",function(){t.destroy()})});var s=function(){try{if(e.isMounted){var t=e.root.querySelector("canvas").getContext("2d"),s=new Chart(t,i());e.trigger("loaded",s)}}catch(n){e.error=n.message,e.update()}},i=function(){try{return"string"==typeof t.chart&&(t.chart=JSON.parse(t.chart)),t.chart}catch(s){e.error="Error parsing JSON: "+s.message}}}),riot.tag2("highlight",'<pre id="pre"><code class="${config.language}">${config.v}</code></pre>',"","",function(t){var e=this;this.on("mount",function(t){0==$("#hl-stylesheet").length&&$("<link id='hl-stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.6.0/styles/tomorrow-night-eighties.min.css' rel='stylesheet' type='text/css'>").appendTo($("head")),App.scripts.load("//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.6.0/highlight.min.js",function(t){App.hlStylesheet=!0,e.highlight()})}),this.on("update",function(t){e.isMounted&&e.highlight()}),this.highlight=function(){setTimeout(function(){window.hljs&&hljs.highlightBlock(this.pre)},0)}.bind(this)}),riot.tag2("diff",'<pre id="pre"><span each="${diff}" class="${added: added, removed: removed, unchanged: !added && !removed}">${value}</span></pre>',"","",function(t){var e=this;this.on("mount",function(t){App.scripts.load("//"+location.host+"/scripts/bower/diff.js",function(t){e.diffValues()})}),this.on("update",function(t){e.isMounted&&e.diffValues()}),this.diffValues=function(){try{var t=(this.config.original||this.parent.item.v)+"\n",e=this.config.v+"\n",s=this.config.diffType||"Chars";this.diff=JsDiff["diff"+s](t,e),this.update()}catch(i){console.log(i)}}.bind(this)}),riot.tag2("mtable",'<div class="${preview: opts.preview}"> <table if="${data}"> <caption if="${parent.activeItem().caption}">${parent.activeItem().caption}</caption> <tr> <th each="${key in keys}">${key}</th> </tr> <tr each="${row in rows}"> <td each="${key in keys}">${row[key]}</td> </tr> </table> </div> <div class="view-full" if="${opts.preview}"><a onclick="${viewFull}">Show All</a></div>',"","",function(t){var e=this;this.on("mount",function(t){e.render()}),this.viewFull=function(){this.opts.preview=!1,$("mtable .preview").removeClass("preview"),$("mtable .view-full").hide()}.bind(this),this.render=function(){var t=this;try{if(this.data=JSON.parse(this.opts.data),this.data.length)this.keys=Object.keys(this.data[0]),this.rows=this.data;else{this.keys=[],this.rows=[];for(var e in this.data)this.keys.push(e),this.data[e].forEach(function(e,s){t.rows[s]||(t.rows[s]=[]),t.rows[s].push(e)})}}catch(s){}this.update()}.bind(this)}),riot.tag2("markdown",'<div id="content"></div>',"","",function(t){var e=this;this.on("mount",function(t){App.scripts.load("//cdnjs.cloudflare.com/ajax/libs/marked/0.3.6/marked.min.js",function(t){e.update()})}),this.on("update",function(s){window.marked&&$(e.content).html(marked(t.value))})}),riot.tag2("shell",'<div class="${preview: opts.preview}"><pre><raw content="${opts.v}"></raw></pre></div> <div class="view-full" if="${opts.preview}"><a onclick="${viewFull}">Show All</a></div>',"","",function(t){this.viewFull=function(){this.opts.preview=!1,$("shell .preview").removeClass("preview"),$("shell .view-full").hide()}.bind(this)});